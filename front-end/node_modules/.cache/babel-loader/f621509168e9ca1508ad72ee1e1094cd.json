{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/leonardoleite/Documents/Challenger/ConceptsSolutions/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  padding: 20px;\\n\\n  span {\\n    font-family: Roboto, sans-serif;\\n    font-size: 100px;\\n    font-weight: 400;\\n    margin: 0px 20px;\\n    color: #333;\\n  }\\n\\n  div {\\n    height: 70px;\\n    width: 70px;\\n    border-radius: 50%;\\n    margin: 0 auto;\\n    background: #2272a1;\\n    animation: \", \" 1s infinite, \", \" 1s ease-in-out infinite;\\n  }\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  from {transform: rotate(0deg);}\\n  to {transform: rotate(360deg);}\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  0% {margin-bottom: 0px;}\\n  50% {margin-bottom: 50px;}\\n  100% {margin-bottom: 0px;}\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  min-height: 100vh;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n\\n  button {\\n    padding: 20px;\\n    border: 0;\\n    font-size: 20px;\\n    font-weight: bold;\\n    color: #fff;\\n    background: #2272a1;\\n\\n    display: flex;\\n    align-items: center;\\n    transition: background 0.2s; // Tempo que demora para escurecer o background\\n\\n    &:hover {\\n      background: \", \"; //Escurecer o bot\\xE3o\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled, { keyframes } from 'styled-components';\nimport { darken } from 'polished';\nexport const Container = styled.div(_templateObject(), darken(0.03, '#2272a1'));\nconst morph = keyframes(_templateObject2());\nconst spin = keyframes(_templateObject3());\nexport const Logo = styled.div(_templateObject4(), morph, spin);","map":{"version":3,"sources":["/Users/leonardoleite/Documents/Challenger/ConceptsSolutions/front-end/src/pages/Home/styles.js"],"names":["styled","keyframes","darken","Container","div","morph","spin","Logo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,OAAO,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAV,oBAoBFF,MAAM,CAAC,IAAD,EAAO,SAAP,CApBJ,CAAf;AAyBP,MAAMG,KAAK,GAAGJ,SAAH,oBAAX;AAMA,MAAMK,IAAI,GAAGL,SAAH,oBAAV;AAKA,OAAO,MAAMM,IAAI,GAAGP,MAAM,CAACI,GAAV,qBAmBAC,KAnBA,EAmBsBC,IAnBtB,CAAV","sourcesContent":["import styled, { keyframes } from 'styled-components';\nimport { darken } from 'polished';\n\nexport const Container = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  button {\n    padding: 20px;\n    border: 0;\n    font-size: 20px;\n    font-weight: bold;\n    color: #fff;\n    background: #2272a1;\n\n    display: flex;\n    align-items: center;\n    transition: background 0.2s; // Tempo que demora para escurecer o background\n\n    &:hover {\n      background: ${darken(0.03, '#2272a1')}; //Escurecer o bot√£o\n    }\n  }\n`;\n\nconst morph = keyframes`\n  0% {margin-bottom: 0px;}\n  50% {margin-bottom: 50px;}\n  100% {margin-bottom: 0px;}\n`;\n\nconst spin = keyframes`\n  from {transform: rotate(0deg);}\n  to {transform: rotate(360deg);}\n`;\n\nexport const Logo = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 20px;\n\n  span {\n    font-family: Roboto, sans-serif;\n    font-size: 100px;\n    font-weight: 400;\n    margin: 0px 20px;\n    color: #333;\n  }\n\n  div {\n    height: 70px;\n    width: 70px;\n    border-radius: 50%;\n    margin: 0 auto;\n    background: #2272a1;\n    animation: ${morph} 1s infinite, ${spin} 1s ease-in-out infinite;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}